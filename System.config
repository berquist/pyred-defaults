!!
!! PyRED - http://q4md-forcefieldtools.org
!! Compatible with Python versions 2.6.x & 2.7.x
!!
!!         System.config file
!! Description of the different keywords used
!!     Documentation of November 30th, 2014
!!
!! System.config file (optional) - to be provided:
!!   within the working directory to overwrite default tasks
!!   with the Project.config file
!!
!! Note: FF = empirical force field(s)
!!
!! ACTIVATE A KEYWORD IN THE SYSTEM.CONFIG FILE ONLY WHEN YOU NEED IT:
!! REMOVE A '#' CHARACTER ONLY WHEN UNDERSTANDING THE MEANING OF A KEYWORD
!!
!!
!! Maximal amount of memory available in MegaBytes (MB) for the QM jobs
!!  256 MegaBytes (MB) = 32 MegaWords (MW)
!!    See http://deviceanalytics.com/memcalc.php
!!  2048 MB = 2 GB = 256 MW (64 bits machine)
!! The default of MAXMEMVAL = 8192 
# MAXMEMVAL = 8192
!!
!! Number of processor(s) used in parallel (in QM calculations)
!! The default of NP = 8
# NP = 8
!!
!! GAMESS (GAMESS-US or WinGAMESS), FIREFLY, or GAUSSIAN
!!                (g09, g03, g98 or g94) is used in QM calculations
!!                 Gaussian09 or Gaussian03 can also be requested
!! The default of QMSOFT = GAUSSIAN
!! THIS OPTION IS NOT CONTROLLED BY THE System.config FILE
!! THIS OPTION IS CONTROLLED BY THE R.E.D. Server Development WEB SITE 
!! TO ACCESS TO THE GAUSSIAN PROGRAM REGISTER AND USE YOUR PRIVATE ACCOUNT
# QMSOFT = GAUSSIAN
!!
!! Language used in the PyRED log file
!! EN (English), FR (French) or CN (Chinese)
!! The default of LANGUAGE = EN
# LANGUAGE = EN
!!
!! The PyRED log file in the TXT or HTML format
!! The default of TYPE_LOG = TXT
!! Not yet implemented...
# TYPE_LOG = TXT
!!
!! Directory name where the final data are stored
!! The default of DIR = Data-R.E.D.Server
# DIR = Data-R.E.D.Server
!!
!! Geometry optimization will be carried out if OPT_Calc = ON
!! OFF No geometry optimization is done & QM output file(s) have to be provided
!! OFF1 Geom. opt. is skipped & the PDB input file is directly used in MEP comput.
!! ON  'Tight' geom. opt. (default for charge derivation)
!! ON1 'VeryTight' geom. opt.
!! ON2 'Normal' geom. opt. (default in QM programs; but not the default in PyRED)
!! ON3 'Loose' geom. opt. (useful only in the debug mode)
!! The default of OPT_Calc = On
# OPT_Calc = On
!!
!! MEP & charges will be calculated if MEPCHR_Calc = ON
!! The default of MEPCHR_Calc = On
!! OFF only geometry optmization is carried out
# MEPCHR_Calc = On
!!
!! Charges are re-fitted & FF libraries re-built from a previous PyRED job.
!!  If Re_Fit = On then OPT_Calc = Off & MEPCHR_Calc = Off
!! The default of Re_Fit = Off
# Re_Fit = Off
!!
!! Normal or Complex job when using the Gaussian program
!! - For organic molecules the Normal mode should be enough
!! - For bio-inorganic molecules the Complex mode and DFT based charge models
!!    are recommended
!! In the complex mode the wavefunction stability is checked and frequency 
!!   computation can be computed
!! The Complex mode requires far more computation time!
!! The default of MOD_GAUSSIAN_JOB = Normal
# MOD_GAUSSIAN_JOB = Normal
!!
!! Request frequencies to be computed
!! The default of Freq_Calc = Off
# Freq_Calc = Off
!!
!! Type of charges:
!! RESP-A1:  HF/6-31G(d)//HF/6-31G(d)                              Connolly algo.  2 RESP fit(*1)  qwt=.0005/.0010
!!   Used in the Cornell (1995), Kollman (1996), Cheatham (1998), Wang (1999), and Hornak (2006) et al. FF
!! RESP-B1:  HF/6-31G(d,p)//B3LYP/cc-pVTZ SCRF(IEFPCM,Solv.=Ether) Connolly algo.  2 RESP fit(*1)  qwt=.0005/.0010
!!   Used in the Duan (2003) et al. FF
!! RESP-C1:  HF/6-31G(d)//HF/6-31G(d)                              CHELPG algo.    2 RESP fit(*1)  qwt=.0005/.0010
!!
!! RESP-O1:  HF/6-31G(d)//HF/6-31G(d)                              Connolly algo.  2 RESP fit(*2)  qwt=.000184/.000184
!!   Defined for the OPLS FF
!! RESP-P1:  HF/6-31G(d)//HF/6-31G(d)                              CHELPG algo.    2 RESP fit(*2)  qwt=.000184/.000184
!!
!! RESP-A2:  HF/6-31G(d)//HF/6-31G(d)                              Connolly algo.  1 RESP fit(*1)  qwt=.0100
!! RESP-C2:  HF/6-31G(d)//HF/6-31G(d)                              CHELPG algo.    1 RESP fit(*1)  qwt=.0100
!!   Used in the Glycam FF
!! ESP-A1:   HF/6-31G(d)//HF/6-31G(d)                              Connolly algo.  1 ESP fit(*3)   qwt=.0000
!!   Used in CHARMM and OPLS FF parameterization
!! ESP-C1:   HF/6-31G(d)//HF/6-31G(d)                              CHELPG algo.    1 ESP fit(*3)   qwt=.0000
!!   Used in CHARMM and OPLS FF parameterization
!!
!! ESP-A2:   HF/STO-3G//HF/STO-3G                                  Connolly algo.  1 ESP fit(*4)   qwt=.0000
!!   Used in the Weiner et al. FF
!! ESP-C2:   HF/STO-3G//HF/STO-3G                                  CHELPG algo.    1 ESP fit(*4)   qwt=.0000
!!
!! RESP-X1:  B3LYP/6-31G(d)//B3LYP/6-31G(d)                        Connolly algo.  2 RESP fit(*1)  qwt=.0005/.0010       i.e. fit = RESP-A1
!! RESP-Y1:  B3LYP/6-31G(d)//B3LYP/6-31G(d)                        CHELPG algo.    2 RESP fit(*1)  qwt=.0005/.0010       i.e. fit = RESP-C1
!!
!! RESP-X2:  B3LYP/6-31G(d)//B3LYP/6-31G(d)                        Connolly algo.  1 RESP fit(*1)  qwt=.0100             i.e. fit = RESP-A2
!! RESP-Y2:  B3LYP/6-31G(d)//B3LYP/6-31G(d)                        CHELPG algo.    1 RESP fit(*1)  qwt=.0100             i.e. fit = RESP-C2
!!
!! ESP-X1:   B3LYP/6-31G(d)//B3LYP/6-31G(d)                        Connolly algo.  1 ESP fit(*3)   qwt=.0000             i.e. fit = ESP-A1
!! ESP-Y1:   B3LYP/6-31G(d)//B3LYP/6-31G(d)                        CHELPG algo.    1 ESP fit(*3)   qwt=.0000             i.e. fit = ESP-C1
!!
!! RESP-X11: B3LYP/6-31G(d)//B3LYP/6-31G(d)                        Connolly algo.  3 RESP fit(*5)  qwt=.0000/.0005/.0010 i.e. fit = 1 ESP + RESP-A1
!! RESP-Y11: B3LYP/6-31G(d)//B3LYP/6-31G(d)                        CHELPG algo.    3 RESP fit(*5)  qwt=.0000/.0005/.0010 i.e. fit = 1 ESP + RESP-C1
!!
!! RESP-X22: B3LYP/6-31G(d)//B3LYP/6-31G(d)                        Connolly algo.  2 RESP fit(*5)  qwt=.0000/.0100       i.e. fit = 1 ESP + RESP-A2
!! RESP-Y22: B3LYP/6-31G(d)//B3LYP/6-31G(d)                        CHELPG algo.    2 RESP fit(*5)  qwt=.0000/.0100       i.e. fit = 1 ESP + RESP-C2
!!
!! (1*) RESP fit: Hyperbolic restraint; Charge equivalencing is carried out during the fit.
!!    Bayly et al. J.Phys.Chem. 1993, 97, 10269.
!! (2*) RESP fit: Quadratic restraint; Charge equivalencing is carried out during the fit.
!!    Henchman & Essex J.Comput.Chem. 1999, 20, 483.
!! (3*) ESP fit:  Charge equivalencing is carried out during the fit.
!! (4*) ESP fit:  Charge averaging is carried during the fit.
!!    Weiner et al. J.Comput.Chem. 1986, 7, 230.
!! (5*) ESP fit followed by one or two hyperbolic restraint fits
!!
!! DEBUG, DEBUG1, DEBUG2: 
!! Do not use the DEBUG modes for generating charge values!
!! The DEBUG modes can be used to (i) quickly get an idea of what is done,
!! (ii) debug the source code & (iii) create new functionalities.
!! The default of CHR_TYP = RESP-A1
# CHR_TYP = RESP-A1 
!!
!! Method used in geometry optimization
!! Limited to the use of the Gaussian program by now
!! Default i.e. the method implemented for the selected charge model
!! HF
!! MP2
!! OPBE   i.e. DFT
!! PBEPBE i.e. DFT
!! BP86   i.e. DFT
!! B3P86  i.e. DFT
!! B3PW91 i.e. DFT
!! B3LYP  i.e. DFT
!! O3LYP  i.e. DFT
!! X3LYP  i.e. DFT
!! Do you need another option? 
!!   contact us: contact_at_q4md-forcefieldtools.org
# METHOD_OPTCALC = Default
!!
!! Basis set for geometry optimization
!! Limited to the use of the Gaussian program by now
!! Default i.e. the basis set implemented for the selected charge model
!! STO-3G
!! STO-6G
!! 3-21G
!! 6-31G(d)
!! 6-31G(d,p)
!! 6-31+G(d)
!! 6-31+G(d,p)
!! 6-31++G(d,p)
!! 6-311G(d)
!! 6-311G(d,p)
!! 6-311+G(d)
!! 6-311+G(d,p)
!! 6-311++G(d,p)
!! cc-pVDZ
!! cc-pVTZ
!! SCRF(IEFPCM,Solvent=Water) or SCRF(IEFPCM,Solvent=Ether) can also be  
!!   added to 6-31G(d) -> cc-pVTZ
!! Do you need another option? 
!!   contact us: contact_at_q4md-forcefieldtools.org
# BASSET_OPTCALC = Default
!!
!! Method used in MEP computation
!! Limited to the use of the Gaussian program by now
!! Default i.e. the method implemented for the selected charge model
!! HF
!! MP2
!! OPBE   i.e. DFT
!! PBEPBE i.e. DFT
!! BP86   i.e. DFT
!! B3P86  i.e. DFT
!! B3PW91 i.e. DFT
!! B3LYP  i.e. DFT
!! O3LYP  i.e. DFT
!! X3LYP  i.e. DFT
!! Do you need another option? 
!!   contact us: contact_at_q4md-forcefieldtools.org
# METHOD_MEPCALC = Default
!!
!! Basis set for MEP computation
!! Limited to the use of the Gaussian program by now
!! Default i.e. the basis set implemented for the selected charge model
!! STO-3G
!! STO-6G
!! 3-21G
!! 6-31G(d)
!! 6-31G(d,p)
!! 6-31+G(d)
!! 6-31+G(d,p)
!! 6-31++G(d,p))
!! 6-311G(d)
!! 6-311G(d,p)
!! 6-311+G(d)
!! 6-311+G(d,p)
!! 6-311++G(d,p)
!! cc-pVDZ
!! cc-pVTZ
!! aug-cc-pVDZ
!! aug-cc-pVTZ
!! SCRF(IEFPCM,Solvent=Water) or SCRF(IEFPCM,Solvent=Ether) can also be
!!   added to 6-31G(d) -> aug-cc-pVTZ
!! Do you need another option? 
!!   contact us: contact_at_q4md-forcefieldtools.org
# BASSET_MEPCALC = Default
!!
!! Surface options when using the Connolly surface algo. in MEP computation
!! Limited to the use of the Gaussian program by now
!! Default  i.e. 4 surfaces (1.4, 1.8, 2.0 and 2.2 Ang.) with
!!                  a density of 0.28 pt per square au
!! IOp(6/33=2,6/41=4,6/42=1)
!! IOp(6/33=2,6/41=4,6/42=6)
!! IOp(6/33=2,6/41=4,6/42=12)
!! IOp(6/33=2,6/41=4,6/42=18)
!! IOp(6/33=2,6/41=6,6/42=1)
!! IOp(6/33=2,6/41=6,6/42=6)
!! IOp(6/33=2,6/41=6,6/42=12)
!! IOp(6/33=2,6/41=6,6/42=18)
!! IOp(6/33=2,6/41=8,6/42=1)
!! IOp(6/33=2,6/41=8,6/42=6)
!! IOp(6/33=2,6/41=8,6/42=12)
!! IOp(6/33=2,6/41=8,6/42=18)
!! IOp(6/33=2,6/41=10,6/42=1)
!! IOp(6/33=2,6/41=10,6/42=6)
!! IOp(6/33=2,6/41=10,6/42=12)
!! IOp(6/33=2,6/41=10,6/42=17) # http://www.teokem.lu.se/~ulf/Methods/resp.html
!! IOp(6/33=2,6/41=10,6/42=18)
!! Do you need another option? 
!!   contact us: contact_at_q4md-forcefieldtools.org
# SURFMK_MEPCALC = Default
!!
!! Strip Gaussian output in agreement with our licence with Gaussian Inc.
!! The default of STRIP = On
# STRIP = On
!!
!! STATS = ON or OFF for statistics
!! The default of STATS = On
# STATS = On
!!
!! Correct charge value rounding off errors at an accuracy defined by the user
!! 6: correction at +/- 1.10-6 e                  
!! 5: correction at +/- 1.10-5 e                  
!! 4: correction at +/- 1.10-4 e
!! 3: correction at +/- 1.10-3 e (pay attention)
!! 2: correction at +/- 1.10-2 e (pay a lot of attention)
!! 1: correction at +/- 1.10-1 e (do not use)
!! 0: no correction is performed
!! The default of COR_CHR = 4
# COR_CHR = 4
!!
!! FF library file format generated by PyRED
!! MOL2: See http://q4md-forcefieldtools.org/Tutorial/leap-mol2.php
!! MOL3: See http://q4md-forcefieldtools.org/Tutorial/leap-mol3.php
!! MOL2-TYPEATOM: MOL2 file format with atom names and types inverted
!! The default of OUTPUT_FORMAT = MOL3
# OUTPUT_FORMAT = MOL3
!!
!! Generation of atom types in agreement with the following FF
!! GLYCAMFF04:     Glycam04 from the Amber10 distribution
!!                 Kirschner & Woods, Proc.Natl.Acad.Sci.USA 2001, 98, 10541.
!!                 Basma et al. J.Comput.Chem. 2001, 22, 1125.
!!                 Kirschner & Woods, J.Phys.Chem.A 2001 105, 4150.
!!    Application: Cezard et al. Phys.Chem.Chem.Phys. 2011, 13, 15103.
!!
!! AMBERFF94:      Cornell et al. J.Am.Chem.Soc. 1995, 117, 5179.
!!
!! AMBERFF96:      Cornell et al. J.Am.Chem.Soc. 1995, 117, 5179.
!!                 Kollman et al. Computer Simulation of Biomolecular Systems
!!                   ed. Wilkinson, Weiner & van Gunsteren, Elsevier, Escom,
!!                   The Netherlands, 1997, 3, 83-96.               
!!
!! AMBERFF98:      Cornell et al. J.Am.Chem.Soc. 1995, 117, 5179.
!!                 Cheatham et al. J.Biomol.Struct.Dyn. 1999, 16, 845.
!!
!! AMBERFF99:      Cornell et al. J.Am.Chem.Soc. 1995, 117, 5179.
!!                 Wang et al. J.Comput.Chem. 2000, 21, 1049.
!!                 
!! AMBERFF99SB:    Wang et al. J.Comput.Chem. 2000, 21, 1049.
!!                 Hornak et al. Proteins 2006, 65, 712.
!!                 
!! AMBERFF99SBBSC: Wang et al. J.Comput.Chem. 2000, 21, 1049.
!!                 Hornak et al. Proteins 2006, 65, 712.
!!                 Perez et al. Biophys.J. 2007, 92, 3817.
!!
!! AMBERFF03:      Wang et al. J.Comput.Chem. 2000, 21, 1049.
!!                 Duan et al. J.Comput.Chem. 2003, 24, 1999.
!!
!! AMBERFF10:      Wang et al. J.Comput.Chem. 2000, 21, 1049.
!!                 Hornak et al. Proteins 2006, 65, 712.
!!                 Perez et al. Biophys.J. 2007, 92, 3817.
!!                 Banas et al. J.Chem.TheoryComput. 2010, 6, 3836.
!!                 Zgarbov et al. J.Chem.TheoryComput. 2011, 7, 2886.
!!
!! OFF:            No FF atom type is generated
!! The default of FFPARM = AMBERFF10
# FFPARM = AMBERFF10
!!
!! Rounding off of FF parameters in the generated FF parameter files
!! The default of FFPARM_ROUND = On
# FFPARM_ROUND = On
!!
!! Energy decomposition is carried out using the FF
!! MM energy values are computed only if no missing FF parameter is found
!! The default of ENERGY_CALC = On
# ENERGY_CALC = On
!!
!! Scaling factor for 1-4 electrostatic energy values
# SCALE_FACTOR_EEL = 0.8333
!!
!! Scaling factor for 1-4 vdW energy values
# SCALE_FACTOR_VDW = 0.5000
!!
